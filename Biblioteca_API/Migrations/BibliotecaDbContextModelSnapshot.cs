// <auto-generated />
using System;
using Biblioteca_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca_API.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    partial class BibliotecaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca_Models.Autores", b =>
                {
                    b.Property<int?>("AutoresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AutoresId"));

                    b.Property<string>("AutoresName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutoresId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Biblioteca_Models.Avaliacao", b =>
                {
                    b.Property<int?>("AvaliacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AvaliacaoId"));

                    b.Property<string>("AvaliacaoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AvaliacaoId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Biblioteca_Models.CategoriasLiterarias", b =>
                {
                    b.Property<int?>("CategoriasLiterariasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CategoriasLiterariasId"));

                    b.Property<string>("CategoriaLiterariaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriasLiterariasId");

                    b.ToTable("CategoriasLiterarias");
                });

            modelBuilder.Entity("Biblioteca_Models.Editoras", b =>
                {
                    b.Property<int?>("EditorasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("EditorasId"));

                    b.Property<DateTime?>("DatePublic")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditorasName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EditorasId");

                    b.ToTable("Editoras");
                });

            modelBuilder.Entity("Biblioteca_Models.Livros", b =>
                {
                    b.Property<int?>("EditorasId")
                        .HasColumnType("int");

                    b.Property<int?>("AutoresId")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriasLiterariasId")
                        .HasColumnType("int");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EditorasId", "AutoresId");

                    b.HasIndex("AutoresId");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("CategoriasLiterariasId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("Biblioteca_Models.Livros", b =>
                {
                    b.HasOne("Biblioteca_Models.Autores", "autores")
                        .WithMany("livros")
                        .HasForeignKey("AutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca_Models.Avaliacao", null)
                        .WithMany("livros")
                        .HasForeignKey("AvaliacaoId");

                    b.HasOne("Biblioteca_Models.CategoriasLiterarias", null)
                        .WithMany("livros")
                        .HasForeignKey("CategoriasLiterariasId");

                    b.HasOne("Biblioteca_Models.Editoras", "editoras")
                        .WithMany("livros")
                        .HasForeignKey("EditorasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autores");

                    b.Navigation("editoras");
                });

            modelBuilder.Entity("Biblioteca_Models.Autores", b =>
                {
                    b.Navigation("livros");
                });

            modelBuilder.Entity("Biblioteca_Models.Avaliacao", b =>
                {
                    b.Navigation("livros");
                });

            modelBuilder.Entity("Biblioteca_Models.CategoriasLiterarias", b =>
                {
                    b.Navigation("livros");
                });

            modelBuilder.Entity("Biblioteca_Models.Editoras", b =>
                {
                    b.Navigation("livros");
                });
#pragma warning restore 612, 618
        }
    }
}
